// Generated by CoffeeScript 1.10.0
(function() {
  var PostSetAction, getPropertyName, lowercaseFirstChar, startsWith;

  lowercaseFirstChar = function(string) {
    return string.charAt(0).toLowerCase() + string.slice(1);
  };

  getPropertyName = function(setterName) {
    return lowercaseFirstChar(setterName.slice(3));
  };

  startsWith = function(string, prefix) {
    return string.indexOf(prefix) === 0;
  };

  PostSetAction = function(prototype, postSetHook) {
    var getterName, getterNames, setterName, setterNames;
    getterNames = (function() {
      var results;
      results = [];
      for (getterName in prototype) {
        if (startsWith(getterName, 'get')) {
          results.push(getterName);
        }
      }
      return results;
    })();
    setterNames = (function() {
      var results;
      results = [];
      for (setterName in prototype) {
        if (startsWith(setterName, 'set')) {
          results.push(setterName);
        }
      }
      return results;
    })();
    setterNames.forEach(function(setterName) {
      var originalSetter;
      originalSetter = prototype[setterName];
      return prototype[setterName] = function(value) {
        var i, len, oldValues;
        oldValues = {};
        for (i = 0, len = getterNames.length; i < len; i++) {
          getterName = getterNames[i];
          oldValues[getPropertyName(getterName)] = this[getterName]();
        }
        originalSetter.call(this, value);
        postSetHook.call(this, getPropertyName(setterName), oldValues);
        return value;
      };
    });
    return prototype;
  };

  module.exports.PostSetAction = PostSetAction;

}).call(this);
